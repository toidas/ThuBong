{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport fetch from 'isomorphic-unfetch';\n\nvar ProductService =\n/*#__PURE__*/\nfunction () {\n  function ProductService() {\n    _classCallCheck(this, ProductService);\n  }\n\n  _createClass(ProductService, null, [{\n    key: \"updateProduct\",\n    value: function () {\n      var _updateProduct = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", fetch('http://localhost:8080/api/products/create', {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: _JSON$stringify(data)\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function updateProduct(_x) {\n        return _updateProduct.apply(this, arguments);\n      }\n\n      return updateProduct;\n    }()\n  }, {\n    key: \"getProduct\",\n    value: function () {\n      var _getProduct = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch('http://localhost:8080/api/products/get-product');\n\n              case 2:\n                res = _context2.sent;\n                _context2.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context2.sent;\n                return _context2.abrupt(\"return\", data);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getProduct() {\n        return _getProduct.apply(this, arguments);\n      }\n\n      return getProduct;\n    }()\n  }]);\n\n  return ProductService;\n}();\n\nexport { ProductService as default };","map":null,"metadata":{},"sourceType":"module"}